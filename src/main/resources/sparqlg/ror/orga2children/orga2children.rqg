PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX fun: <http://w3id.org/sparql-generate/fn/>

GENERATE <orga2children>(?parent_ror, ?ror) {

  ### use the organization mapping already defined in /ror/organization/orga_mapping.rqg
  GENERATE <https://projects.tib.eu/tapir/ror/organization/orga_mapping.rqg>( ?parent_ror, ?orga ) .

  ### call this query recursively for all children
  GENERATE {
    GENERATE <https://projects.tib.eu/tapir/ror/orga2children/orga2children.rqg>(?ror, ?child_ror ) .
  }
  ITERATOR iter:JSONPath(?orga, '$.relationships[*]') AS ?relationships
  WHERE {
    BIND(fun:JSONPath(?relationships, '$.label' ) AS ?rel_label)
    BIND(fun:JSONPath(?relationships, '$.type' ) AS ?rel_type)
    BIND(fun:JSONPath(?relationships, '$.id' ) AS ?rel_id)

    BIND( IF( STR(?rel_type)="Child" , ?rel_id , ?undef ) AS ?child_ror )
    BIND(REPLACE(?child_ror, "https://ror.org/" , "" ) AS ?child_id)
    BIND( IF( STR(?rel_type)="Child" , ?rel_label , ?undef ) AS ?child_name )
    FILTER( BOUND(?child_ror) )
  }  .

}
SOURCE <https://api.ror.org/organizations/{?ror}> AS ?orga
